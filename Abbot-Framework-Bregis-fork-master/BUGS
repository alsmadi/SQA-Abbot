MINOR BUGS (not necessarily reported on SF or included in RELNOTES)
----------
* first row of script table, component hierarchy tables doesn't highlight
  after some actions after first display.

* ref/component selection is *very* slow

* text field won't scroll to visible (OSX) (e.g. costello classpath editor)

* editor selection of references is slow; first index on w32 doesn't highlight

* need to clean up test suite loading; it currently scans the current context
  class loader, but doesn't use that loader when loading the selected class.

* changing selection in component browser should not collapse trees
* need to set validity of class/method when call editor first created
* move focus to text field on array editor add

* 1.3 doesn't generate COMPONENT_SHOWN/HIDDEN events?
* need jspinner recorder (instead of recording buttons)

* StepRunner should use a thread group and catch ExitExceptions on the event
  dispatch thread (cf. ScriptEditor).

* java.awt.CheckboxMenuItem can't be recorded (?)

* class saved in Assert should be java.awt or javax.swing if possible.

* tooltip on "assert equals" causes refresh/reset of hierarchy browser

* record AWT popup menu (recording errors, NPE)

* Terminate should *always* be paired with launch, since launch sets up the
  class loader.  is there any reason to move the class loader setup outside of
  the launch step, other than to have StepRunner manage it?

* ComponentTester is looked up when mousing over main editor window (--debug
  abbot.tester.ComponentTester).  should avoid filtered components.

* run editor under itself, close editor.  w32 1.4.1_02 complains about
  disposing of InputContext which is still in use.

* JScrollBar actions are recorded and probably shouldn't be

* w32 FileDialog throws NPE on getLocationOnScreen (VM bug)

* record into MyCode-0.xml; change script to MyCode-N.xml, don't save changes,
  exception is thrown.
* Step.setScriptError is permanent and shouldn't be; it should get cleared
  when attributes are changed.  It's also largely obsolete; runtime checking
  is cleaner, and the XML is now validated elsewhere.

* OSX:1.4.1: InputMethodEvents generated on all key events (instead of
  key_typed?) 
* OSX:1.4.1: swaps buttons 2/3 when generated by robot
* action target class names not fixed up on save (still component class)

* annotation: don't reposition if anchor component not visible
* need to update table cursor on script table toggle
* need to somehow make getSystemClassLoader return the launch class loader; or
  maybe the real solution is to fork and use remote comm. (NOTE: should
  enumerate all the issues and weigh benefits here).
  - class loading (getSystemClassLoader, java.class.path)
  - resource loading (getSystemResource)
  - unloading loaded classes, cleaning up resources
  Probably just need to have it as an option, in case the lightweight version
  is not sufficient.  Also clearly document use cases.

* The most common deadlocks seem to be with the toolkit lock and the tree
  lock.  what about running a thread during launch which blocks the event
  dispatch thread (via invokeLater); but periodically unblocks it if it seems
  nothing is happening? (add explicit tests for two most common startups:
  Window.show and Dialog.show).
  show() : biggest problem, grabs treelock (1.3); on dispatch, grabs toolkit
  only need hierarchy events for hierarchy browser
  (not so many problems with 1.4.1)

* cursor position, launch+terminate (click bottom of launch fails)

* 'New Script' leaves previous script information in combo box and suite label.
* "duplicate fixture" needs to update script combo box


* sporadic tiny size when editor launched (put in warning) (VM bug)
* if "classes" is missing on java.class.path, appletviewer fails,
  even if "classes" is present in the Launch classpath (dil_kiss) 

* can't record a second time (OSX 1.3.1 menu action bug)
* OSX 1.4.2 menus not re-enabled; works for run, not for launch

* runto.xml (now fails on OSX 1.3.1_03)

* xp: slow playback setting needs to be slower; causes popup selection to fail
* Can't make script table/editor smaller when editor is showing
* ClassLoader.getSystemClassLoader is probably used "incorrectly" in most
  apps.  They probably intend to get Class.getClassLoader or
  Thread.getContextClassLoader.  This isn't explained well in the javadoc.
* Test script combo box doesn't update when script name/desc/option changes
  (linux) 
* query for save on exit should cancel if the attempted save fails, or maybe
  ask for a different save file.

* do this: new script, switch, duplicate, save as original new one,
  script steps are then messed up
* handle save failure if directory doesn't exist...
* edit inserted script path; edit again, shows first step instead
* need to be able to cancel process on run/launch/terminate
* changing target component on a property assertion causes big problems
* properties need to be live (i.e. text field value, auto-update values)
* smoke test needs to select specific item from jlist, not just first


FIXED
x.x.x
* web start leaves ampersands in front of submenu menu items in Costello.


0.13.0
* select test suite on editor -- different behavior if app under test is up or
  not, due to event dispatch class loader (need a context, desperately)
* cref id changes aren't propagated to Script (id->cref map)
* jcomponent/jdialog/jframe/jpanel/jwindow.gif oops
* row/col/corner header in jscrollpane shouldn't be elided
* BIG stack on unit test errors, indicating that AWT event listeners aren't
  being GC'd as expected. (real reason is tests themselves aren't GCd and had
  references (eventually) to the listeners).
* addComponent should pattern match titles; otherwise I get one comp ref with
  title ="this.*"  and another with title="this exact".
  unfortunately, this is not easy to do automatically
* references tab is sometimes entirely blank
* closing scripteditor under test, hierarchy browser not updated 
* setting launch step, class not found, error seems permanent
  class not found on certain launch input permutations (maybe order of setup?)
  NOTE: relative paths are relative to user.dir, not script dir.
* 1.4.2: appletviewer no longer works, can't find its resource bundle (?)
* JFileChooser: dialogs need to be filtered after hide when they're
  auto-generated by the file chooser (cf JOptionPane.showXXX)
* more "lenient" component matching now has "Message" dialog reference
  matching JFileChooser dialog when recording and looking to see if a
  reference already exists for a given component.  Not good!
  When recording, creation of references must be exact!  only use existing
  references if we're *sure* they are the same component.
* Class loader context is not installed until the launch step is run.  This
  means that you won't be able to resolve classes in the editor until you've
  launched your app.  Maybe the launch step should be able to independently
  install/remove the class loader context.
* string array displayed as a pointer in property box
* cref attributes don't show up when hierarchy selected
* propagate changes in editor when id added/removed or method selected
  available method list merges property methods w/pseudos; remember to use
    corresponding component class if current target class is a tester
  make sure editor insert property check uses the right ctor (done)
  clean up call/assert/sample target class name (done):
* class load context needs installation on demand (and maybe when the launch
step changes).  wait, it doesn't have to install the context class loader,
does it?  just needs to create it... 

0.11.x
* "open/new script" doesn't warn about current modified script
* Second run of appletviewer leaves component found but not showing
  (i.e. it likely found the wrong one).


0.10.1
* export hierarchy *very* slow; should probably move component reference
  validation OUT of the ctor.  needs some redesign.

* should StepRunner.tearDown invoke terminate?  probably, since the only
  fixture currently supported is one script that includes several others
  (done). 

0.10.0
* make sure editor gets out of the way properly when running a selection of
  steps.   maybe simply "hide"?
* w32 drag on script table selects more rows, *then* drags
* ESC not captured in editor
* modifiers passed to actionClick other than buttons are ignored
* MyCode-0.xml fails on OSX (others?)
* event normalizer doesn't stop all key repeat events; needs to track which
  modifiers are down to avoid repeats.
* insert terminate, terminate is first
* on reverse lookup, maybe try once for visible, once for non-visible
  (probably needed for WINDOW_CLOSING (no)) (n/a)
* removing abbot.jar from examples: extension testers have a dependency on the
  editor!  need to fix up tester property installation
* Test failures:
  ComponentTester(clickatwbuts), FrameTester(resize), JListTester(sel1stind)
  - 1.4 extra show/hierarchy events; show/hide record needs fixing
  - ComponentTesterTest.testPopupMenuItem: no popup w/button3_mask
  (intermittent, might be a timing thing or a robot bug)
  - JTabbedPaneRecorderTest.testCaptureSelection: (intermittent, OSX) final tab
  selection never registered as an event.
  (these were likely due to native window not ready bugs)
* when saving a component ref's "title", use the component's tag instead; this
  way named components are an easy way of dealing with mutable titles.  maybe
  a new tag, windowtag or something.  
  (names are used in preference to tags or titles)
  need to verify reference creation to make sure it does this

0.9.1
* recorder takes a loong time to stop the first time
* too long saved wait delay on first frame showing (e.g. 25s) why?
* context class loader not set on main thread with threaded launch
  step runner wants to handle the thread so it can catch errors
  launch wants to handle the thread so it can set the context class loader on
    both threads (keep context abstracted in launcher).
  script editor needs launch context outside of actual run
* shift+F2 on editor starts/stops w/no capture (if AUT is up)
* shift+F2 stops on AUT, but does nothing afterwards
* w2k leaves editor unactivatable (b/c frame is not active) (w32 1.4.1_02)
* OSX:1.4.1: robot event sent prior to window capable of receiving it (?)
  15/39 failures fixed by adding a delay on window show
  (this also affects other platforms)

0.9.0
* when storing component references, save most-derived swing/awt class instead
  of most-derived class? (find class which corresponds to tester)
* combo box selection recording: MyCodeTest, scroll generates class cast
  exception, selection indicates "Popup on null"
* escape commas when presenting an argument list as a string
* script directory should be used as the pwd for relative paths, both for
  included scripts and class paths.  we don't really care where the editor was
  launched (i.e. user.dir).
* need to warn for save when switching to another script via combo box
* click in button doesn't need coords (recording)
* color/error not cleared on step (on launch; is cleared on run) (StepRunner)
* filter checkbox should refresh property table
  filter in properties table doesn't respond
* when opening a script, disable the entire interface until it is loaded
* A Launch followed immediately by a Terminate can sometimes result in the app
  under test being disposed (and filtered) before it is actually shown.  This
  leaves the editor unable to get rid of it.
  I suppose malicious applications could also still re-pack their frames after
  being disposed...
  Not sure what to do about this yet... 
* meta/control starts editing a list step (on OSX) -- why?
  note: this is sometimes still the case even with the custom editors; maybe
  this is an action map thing?
* Security manager under editor causes class cast exceptions when certain
  AppletViewer commands are invoked.
* 1.3 hierarchy listener bug can cause serious failures if the NPE is thrown
  on dialog hide; it leaves the dialog hidden but still processing all events.
* createMenuSelection can throw NPE if somehow interrupted by F2 (shura)
* waitforidle is not consistent on OSX
* OSX has problems with treelock + toolkit lock (maybe grab both on launch
  until launch is done?)
* move up doesn't go into previous sequence if sequence empty;
  what about context? moving out of a script can have consequences to
  component references.  Anything moved into a script needs to copy all its
  component references (how?).  Maybe disallow moves into/out of a script for
  now. 
* ComponentRecorderTest.testMultipleClick fails (only produces a single click)
  when run with the full fixture, but works standalone.
* abbot.robot.auto_delay=1000 stack overflow (was recursive waitforIdle call)
* annotation doesn't need description field
* select error step doesn't bring up editor
* index out of bounds when switching scripts
* new script, no launch/terminate inserted
* COMPONENT_SHOWN vs hierarchy events.
* new script f*ked up (index bug w/drag/drop)
* recorder quits right away if record action launchs app, b/c no windows are
  showing 
* cell renderers show up as non-filtered (--log - on editor)
* slowdown on tab pane playback/record (table too) (comes and goes...)
* text on custom text field (MyCode-0.xml) is not accessible to
  component/property browser
* After recording, if app is closed, recorder should terminate 
  or at least main app should allow F2 to stop recording (it doesn't 
  since everything is disabled).
* sendevent needs to be renamed to event for auto-parsing to work.
* need to trim leading release and trailing press events
* shift-F2 captures motion
* <1.4 always get two key events; need to auto-discard the outer one
  seems to be fixed in 1.4xb
* cf tooltip windows vs popups as windows
* need to detect WINDOW_CLOSING events (triggered by wm close, not by hide or
  anything else) (need test)
* shift-F2 on applet doesn't work

0.8.3
* no test suites found (classes not in classpath) results in exception 'make
  edit' 
* need to disable all editor components during launch to reduce likelihood of
  deadlock with launched apps that think they can do any AWT stuff they want
  in their main method.  maybe just hide main editor window?
* DynamicClassLoader needs to apply delegation rules to resources
  Really it needs to derive from URLClassLoader and only define loadClass.
* XP/1.4.1 JTableTesterTest.testSelectCells
* move up/down on open sequence fails
* F2 fails when launching app (it stops too soon)
* input method has key released events on OSX but no key press events
* xp: newly shown window don't always appear in front of other windows,
  leading to test failures. (bug in 1.4.0, fixed in 1.4.1)
* XP/1.4.0 KeyStrokeMapTest.X (window doesn't always get focus) (fixed in
  1.4.1) 
* XP/1.4.1 testClickWithDialog (captures resize)
  shouldn't capture resize prior to show
* hierarchy browser doesn't update after script failure (but does display
  properties on component selection)
* Image comparator endianness for jpgs
  jpg compare not cross-platform, probably a byte-ordering issue (not
  reproducible -- maybe jpeg encoding across VM versions?) 
* dup script fails (needs a test)
* new script fails (needs a test) (both introduced by disallowing non-existent
  scripts. 
* editor doesn't show up if class missing/error on call/subclass
  (introduced with method popup)
* F2, F2, cut step (recorder still recording!) (fixed)
  maybe enable capture->stop and only handle non-filtered events in listener
* drag recording (at least on JComboBox) (write test for it)
* hierarchy doesn't update after launch
* inserted scripts have problems resolving component references
* editor - npe on menus (run mycode-0.xml) (OSX/1.3.1)
* component browser reference list not updated w/script context.
0.8.2
* getText doesn't show up on a derived class (CustomTextField in MyCode)
  Assert bug
* multiple dialog bug
* duplicate joption panes in defaultcomponentfindertest
* These fail only when run FrameworkTestSuite is run first
  EventRecorderTest.testClickWithDialog
  ComponentRecorderTest.testInitial/SubsequentFrame/DialogShowHide
  (was Platform cacheing bug)
0.8.1
* xp: numerous text failures
* xp: focus failure
* Fix hierarchy event lockups (these may be sent *off* the dispatch thread)
* Lack of a SecurityManager when launching AppletViewer directly from a junit
  testrunner results in
  "access denied (java.lang.RuntimePermission accessClassInPackage.sun.applet)
  Not clear what's going on here; perhaps appletviewer is installing a
  security manager if there isn't one?  b/c the script runs fine under the
  editor, which does install a security manager.
* need to track multiple app contexts (appletviewer)
0.8.0
* test failures in junit gui don't show up when an individual test runs
  suite is run under a new thread; single test is run directly from AWT thread
  (bug in junit)
* things get ugly if method not found after a step is added
  getMethod/resolveMethod happens first within toXML...
* capture key press in dialog - release is sent to a different component,
  after the window is closed (ESC/return) (I think this is fixed)
* reference list doesn't show on initial load
* property list clears on click in script table
* Activate crap on OSX, linux (errors) vm bug?  1 failure on OSX, 2 errors on
  linux.  Really want to ignore activates where they're not relevant.
* Test failures:
  - JComboBoxRecorderTest.testCaptureSelection: fails on linux
  - EventRecorderTest.testNumPad: fails on linux
  - meta+V works on OSX, results in alt+V on linux and an illegal arg exception
  on w32
  - ComponentTesterTest.testClickAtWithButtons: failure on w32 b/c CTRL_MASK
  is set.
* Need better handling/partial loading when scripts contain errors
0.7.x
* Custom components (particularly those with custom testers) currently must be
  loaded with the main class loader (see "b" below).

  * custom gui class: must be loaded by custom loader
  * custom tester class: references to custom gui class must be resolved to
    same class as above, otherwise class cast exceptions will result.
  * DefaultComponentFinder, when matching classes, checks isAssignableFrom.
    could check class names, but that doesn't handle isAssignableFrom.  Maybe
    have the custom tester provide the check?  there may not be a custom
    tester. 
  * getting tester dynamically from component class seems promising, but am
    getting a lot of exceptions.

  The two alternatives for class loading testers are:
  a) load custom testers with LaunchedClassLoader (preferred)
  The class loader for the class under test might be used to load the custom
  tester, but this entails a lot of complexity to ensure class conflicts are
  resolved across loaders.
  This is implemented by getting the class + class loader directly from the
  component being tested.

  b) load custom gui components with system class loader
  This means if the custom gui component is the one under test, it won't get
  reloaded.  This may not be an issue since it's usually more complex launched
  applications that need the reloading.  However, the custom class path gets
  ignored in this case, which is bad.

* overriding a tester with ComponentTester.setTester won't actually work if
  using a non-delegating loader, since it uses a class and an instance created
  in the framework context.  it needs to look up by name and create a new
  tester if the instance stored is of a different class loader than the class
  being used to look it up.
0.7.3
* class cast on FontChooserTest (context class loader, likely)
* component browser hierarchy not updated on code launch
* assert/waitfor menus keep growing with selected components
* selected component not updated immediately
* control keystrokes result in key typed messages
* Setting the classpath in a Launch step still does not enable the class under
  test to find image resources (SwingSet2.jar).
* Errors in scripts sometimes result in an empty script being saved (this is
  REALLY BAD).
0.7
* editor needs to filter any dialogs it creates (now does this by catching
  WINDOW_OPEN and filtering anything with the script editor frame as parent). 
* launch/terminate menu options are unaffected by "run"
* temporary dialogs shown from JOptionPane methods are not filtered after they
  are disposed.
0.6.3:
* selecting javax.swing.plaf.metal.JComboBox results in id of ""
* if class not found for Launch, won't allow change; if method not found, it
  will 
* save keychars as escaped xml!
* make it work with appletviewer, use a reloading class loader to help with
  reinitialization issues.
* eliminate some component deadlock caused by script editor JTree componetns
  locking AWT when a script is run or launched.
* GUI launches should be class-reloaded each time; also need to suspend any
  script editor AWT event handling while app is launching (jedit usually hangs)
0.6.2:
* if editor window stretched wider, it won't compress
* still have some errant key events when recording
* filter default popup factory windows (popup wrappers w/no popup)
* Need to filter popup shell windows; not sure if filtering absolutely is
  correct; check impl to see if they're ever reused.  They're certainly not
  currently in use if the content pane is empty.
* Clicking on components by reference is *really* slow w/jedit
* POPUP mask on w32 keeps failing!
* fast typing results in scattering of key input events; needs to be cleaned
  up, also need to flag ignoring typed events to simulate win ME
* need some sort of lock on AWT event queue while app under test is launching,
  maybe keep AWT from running until the event queue is idle.
  (fixed for now by threading launch and run of script, but not threading
  within the steps themselves).
* edit inserted script path; edit again, shows first step instead
* things get ugly if method not found after a step is added
  getMethod/resolveMethod happens first withint toXML...
* script table doesn't always refresh on script failure.
  needed to set cell renderer opaque
* fight between launching on non-swing thread vs needing to launch on swing
  thread to avoid swing conflicts with startup junk; most main routines do
  some swing setup (where swing is not yet running).  threading is an option
  now. 
* don't put desc in script toXML
* multiple identical steps are indistinguishable; do we really need identical
  hashcodes?  identical steps will locate the first one...
  (only for sequences/scripts kept track of by script editor table, but i
  don't think those are ever replaced)
* need to reset row selection when setting script
* getName() on frame requires AWT lock!  maybe lock queue before asking
  test is deadlocked with event queue trying to get name
  Apparently test thread is trying to get name which locks Component instance,
  then attempts to get lock on getClass() (which is unknown to me)
  Swing thread (which probably has Frame class lock) now attempts to get
  Component instance lock (in getName()).
( see if this is an issue on other platforms; might be Frame.class lock )
* getName() on frame requires AWT lock!  maybe lock queue before asking
  test is deadlocked with event queue trying to get name
  Apparently test thread is trying to get name which locks Component instance,
  then attempts to get lock on getClass() (which is unknown to me)
  Swing thread (which probably has Frame class lock) now attempts to get
  Component instance lock (in getName()).
( see if this is an issue on other platforms; might be Frame.class lock )

* event capture bugs:
  click on button w/dialog doesn't catch mouse_released
  click on button w/dialog results in two waitfrmaeshowing
  after dialog goes away, gets both wait !frame and activate

